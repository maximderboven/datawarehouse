// Start mongoDB server
mongodb --port 27017 --dbpath "C:\Program Files\MongoDB\Server\5.0\data" --replSet cfg --bind_ip localhost
// Configs folders
mkdir cfg0 cfg1 cfg2
// Sharding folders
mkdir a0 a1 a2 b0 b1 b2 c0 c1 c2 d0 d1 d2
// Starting config servers in cmd's
mongod --configsvr --port 6900 --bind_ip localhost --replSet cfg --dbpath "configs/cfg0"
mongod --configsvr --port 6901 --bind_ip localhost --replSet cfg --dbpath "configs/cfg1"
mongod --configsvr --port 6902 --bind_ip localhost --replSet cfg --dbpath "configs/cfg2"
// open mongosh
mongosh --host localhost --port 6900
// Configure replicaset
rsconf = {
  _id: "cfg",
  members: [
    {
     _id: 0,
     host: "localhost:6900"
    },
    {
     _id: 1,
     host: "localhost:6901"
    },
    {
     _id: 2,
     host: "localhost:6902"
    }
   ]
}

// initiate replicaset into server
rs.initiate(rsconf)

// Configure first shard
mongod --shardsvr --port 7000 --bind_ip localhost --replSet shrds --dbpath "shards\a0"
mongod --shardsvr --port 7001 --bind_ip localhost --replSet shrds --dbpath "shards\a1"
mongod --shardsvr --port 7002 --bind_ip localhost --replSet shrds --dbpath "shards\a2"

mongosh --host localhost  --port 7000
rsconf = {
  _id: "shrds",
  members: [
    {
     _id: 0,
     host: "localhost:7000"
    },
    {
     _id: 1,
     host: "localhost:7001"
    },
    {
     _id: 2,
     host: "localhost:7002"
    }
   ]
}

rs.initiate(rsconf)
rs.status

// repeat for other shard

mongod --shardsvr --port 7100 --bind_ip localhost --replSet shrds1 --dbpath "shards\b0"
mongod --shardsvr --port 7101 --bind_ip localhost --replSet shrds1 --dbpath "shards\b1"
mongod --shardsvr --port 7102 --bind_ip localhost --replSet shrds1 --dbpath "shards\b2"

mongosh --host localhost  --port 7100
rsconf = {
  _id: "shrds1",
  members: [
    {
     _id: 0,
     host: "localhost:7100"
    },
    {
     _id: 1,
     host: "localhost:7101"
    },
    {
     _id: 2,
     host: "localhost:7102"
    }
   ]
}

rs.initiate(rsconf)
rs.status

// Start cluster from config replicaset
mongos --configdb cfg/localhost:6900,localhost:6901,localhost:6902 --bind_ip localhost --port 6969

// Add shards to cluster
mongosh --host localhost --port 6969

sh.addShard("shrds/localhost:7000,localhost:7001,localhost:7002")
sh.addShard("shrds1/localhost:7100,localhost:7101,localhost:7102")

// enable sharding on rides collection
sh.enableSharding("rides")
sh.shardCollection("velo.rides", {"BeginStationId": 1})

// chunksize aanpassen naar de kleinere dataset
use config

db.settings.updateOne(
    { _id: "chunksize" },
    { $set: { _id: "chunksize", value: 32 } },
    { upsert: true }
)
use velo

// Check chunk size
sh.balancerCollectionStatus("velo.rides")

db.rides.getShardDistribution ()


SELECT uitvoeren op db met BeginStationId
en exporteren naar de een csv

// Importeren vie mongodbcompass
			
// Alle documenten uit collection verwijderen
db.rides.deleteMany({})